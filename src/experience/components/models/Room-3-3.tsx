"use client";

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Room-3-3.glb
Converted & optimized for baked texture + video screens workflow
*/

import { useGLTF, useTexture, useVideoTexture } from "@react-three/drei";
import React from "react";
import { MeshStandardMaterial } from "three";

type GLTFResult = {
  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  nodes: { [name: string]: any };
  materials: { [name: string]: MeshStandardMaterial };
};

const Room_3_3_Baked: React.FC<React.ComponentProps<"group">> = (props) => {
  const { nodes } = useGLTF("/models/Room-3-3.glb") as unknown as GLTFResult;

  // ðŸŽ¬ Video textures
  const pcVideo = useVideoTexture("/textures/matrix-rain.mp4");
  pcVideo.flipY = false;

  const laptopVideo = useVideoTexture("/textures/matrix-rain.mp4");
  laptopVideo.flipY = false;

  // ðŸ§± Baked texture
  const bakedTexture = useTexture("/textures/Room3-3.jpg");
  bakedTexture.flipY = false;

  return (
    <group {...props} dispose={null}>
      {/* ðŸ–± Mouse */}
      <group
        position={[1.627, 1.825, 1.218]}
        rotation={[0, 0.829, 0]}
        scale={1.674}
      >
        <mesh geometry={nodes.Mouse_final.geometry}>
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
        <mesh geometry={nodes.wheel.geometry}>
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
      </group>

      {/* ðŸ’» Laptop */}
      <group
        position={[0.291, 1.82, 2.247]}
        rotation={[0, 1.13, 0]}
        scale={[2.26, 2.033, 2.26]}
      >
        {/* Laptop Screen */}
        <mesh geometry={nodes["laptop-screen"].geometry}>
          <meshBasicMaterial
            map={laptopVideo}
            toneMapped={false}
            transparent={false}
          />
        </mesh>

        {/* Laptop Body */}
        <mesh geometry={nodes.Plane.geometry}>
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
      </group>

      {/* ðŸ–¥ PC Case */}
      <group
        position={[-0.757, 0.401, 2.614]}
        rotation={[0, -0.926, 0]}
        scale={1.899}
      >
        {[
          "case",
          "case001",
          "caseinside",
          "fan",
          "fan001",
          "fan002",
          "fan003",
          "fan004",
          "Plane004",
        ].map((key) => (
          <mesh key={key} geometry={nodes[key].geometry}>
            <meshBasicMaterial map={bakedTexture} />
          </mesh>
        ))}
      </group>

      {/* ðŸª‘ Chair */}
      <group
        position={[1.484, 0.407, 2.386]}
        rotation={[Math.PI, -1.24, Math.PI]}
        scale={1.899}
      >
        {[
          "Arm_Rests",
          "Crossbar",
          "Cushion_-Bottom",
          "Cushions_-_Back",
          "Frame",
          "Gas_Strut",
          "Legs&_Wheels#",
          "Legs&_Wheels#001",
          "Legs&_Wheels#002",
          "Legs&_Wheels#003",
          "Legs&_Wheels#004",
          "Supprt_-_V",
          "T_Joint",
        ].map((key) => (
          <mesh key={key} geometry={nodes[key].geometry}>
            <meshBasicMaterial map={bakedTexture} />
          </mesh>
        ))}
      </group>

      {/* ðŸ–¥ PC Monitor */}
      <group
        position={[1.023, 1.818, 1.002]}
        rotation={[0, 0.325, 0]}
        scale={2.052}
      >
        {/* Monitor Frame */}
        <mesh geometry={nodes.Monitor.geometry}>
          <meshBasicMaterial map={bakedTexture} />
        </mesh>

        {/* Monitor Screen */}
        <mesh geometry={nodes["pc-screen"].geometry}>
          <meshBasicMaterial
            map={pcVideo}
            toneMapped={false}
            transparent={false}
          />
        </mesh>
      </group>

      {/* ðŸªµ Desk */}
      <mesh
        geometry={nodes.Modern_Desk.geometry}
        position={[0.695, 0.068, -0.039]}
        rotation={[0, -0.78, 0]}
        scale={1.628}
      >
        <meshBasicMaterial map={bakedTexture} />
      </mesh>

      {/* ðŸ’¡ Lamp */}
      <mesh
        geometry={nodes.Desk_Lamp.geometry}
        position={[-0.824, 2.35, 2.796]}
        rotation={[0, -1.135, 0]}
        scale={1.946}
      >
        <meshBasicMaterial map={bakedTexture} />
      </mesh>

      {/* ðŸŒ€ Carpet & Keyboard */}
      {["Circle_Rug", "Blender_keyboard", "Black_circle_round_carpet"].map(
        (key) => (
          <mesh
            key={key}
            geometry={nodes[key].geometry}
            position={[0.695, 0.068, -0.039]}
            rotation={[0, -0.78, 0]}
            scale={1.628}
          >
            <meshBasicMaterial map={bakedTexture} />
          </mesh>
        )
      )}
    </group>
  );
};

// ðŸ”¹ Preload model
useGLTF.preload("/models/Room-3-3.glb");

export default Room_3_3_Baked;
