/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Converted & optimized for baked texture workflow
*/

"use client";

import { useGLTF } from "@react-three/drei";
import React, { useMemo } from "react";
import { TextureLoader, Mesh } from "three";

type GLTFResult = {
  nodes: Record<string, Mesh>;
};

const Room2: React.FC<React.ComponentProps<"group">> = (props) => {
  const { nodes } = useGLTF("/models/Room-3-2.glb") as unknown as GLTFResult;

  // 🧱 Load baked texture
  const bakedTexture = useMemo(() => {
    const texture = new TextureLoader().load("/textures/Room3-2.jpg");
    texture.flipY = false;
    return texture;
  }, []);

  return (
    <group {...props} dispose={null}>
      {/* 🧊 Cube group */}
      <group
        position={[0.695, 0.043, -0.039]}
        rotation={[0, -0.78, 0]}
        scale={1.628}
      >
        {[
          "Cube067",
          "Cube068",
          "Cube069",
          "Cube070",
          "Cube071",
          "Cube072",
          "Cube073",
          "Cube074",
          "Cube075",
        ].map(
          (name) =>
            nodes[name] && (
              <mesh key={name} geometry={nodes[name].geometry}>
                <meshBasicMaterial map={bakedTexture} />
              </mesh>
            )
        )}
      </group>

      {/* 🐉 Dragon & handles */}
      {[
        "Dragon",
        "KALLRÖR_HANDLE_213MM002",
        "KALLRÖR_HANDLE_213MM001",
        "Cylinder001",
        "Cylinder",
        "Cube999",
        "Cube011",
        "Cube010",
        "Cube009",
        "Cube008",
        "Cube007",
        "Cube006",
        "Cube005",
        "Cube004",
        "Cube003",
        "Cube001",
      ].map(
        (name) =>
          nodes[name] && (
            <mesh key={name} geometry={nodes[name].geometry}>
              <meshBasicMaterial map={bakedTexture} />
            </mesh>
          )
      )}

      {/* ♟️ Chess set */}
      {[
        "tower2001",
        "tower2",
        "tower001",
        "tower",
        "rook2001",
        "rook2",
        "rook001",
        "rook",
        "queen2",
        "queen",
        "pawn2007",
        "pawn2006",
        "pawn2005",
        "pawn2004",
        "pawn2003",
        "pawn2002",
        "pawn2001",
        "pawn2",
        "pawn007",
        "pawn006",
        "pawn005",
        "pawn004",
        "pawn003",
        "pawn002",
        "pawn001",
        "pawn",
        "knight2001",
        "knight2",
        "knight001",
        "knight",
        "king2",
        "king",
        "board",
      ].map(
        (name) =>
          nodes[name] && (
            <mesh key={name} geometry={nodes[name].geometry}>
              <meshBasicMaterial map={bakedTexture} />
            </mesh>
          )
      )}

      {/* 📚 Books */}
      {[
        ["Book-9", [3.916, 3.32, -0.429]],
        ["Book-8", [3.834, 3.309, -0.468]],
        ["Book-7", [3.773, 3.346, -0.555]],
        ["Book-6", [3.697, 3.314, -0.6]],
        ["Book-5", [3.657, 3.32, -0.668]],
        ["Book-4", [3.592, 3.32, -0.727]],
        ["Book-3", [3.54, 3.308, -0.791]],
        ["Book-2", [3.487, 3.32, -0.854]],
        ["Book-13", [4.196, 3.318, -0.16]],
        ["Book-12", [4.12, 3.345, -0.232]],
        ["Book-11", [4.045, 3.318, -0.305]],
        ["Book-10", [3.978, 3.32, -0.369]],
        ["Book-1", [3.424, 3.32, -0.913]],
      ].map(
        ([name, position]) =>
          nodes[name as string] && (
            <mesh
              key={name as string}
              geometry={nodes[name as string].geometry}
              position={position as [number, number, number]}
              rotation={[0, -0.043, 0]}
              scale={1.628}
            >
              <meshBasicMaterial map={bakedTexture} />
            </mesh>
          )
      )}
    </group>
  );
};

useGLTF.preload("/models/Room-3-2.glb");

export default Room2;
