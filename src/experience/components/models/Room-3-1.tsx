/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Converted & optimized for baked texture workflow
*/

"use client";

import { useGLTF } from "@react-three/drei";
import React, { useMemo } from "react";
import { TextureLoader, Mesh } from "three";

type GLTFResult = {
  nodes: Record<string, Mesh>;
};

const Room_3: React.FC<React.ComponentProps<"group">> = (props) => {
  const { nodes } = useGLTF("/models/Room-3-1.glb") as unknown as GLTFResult;

  // ðŸ§± Load baked texture
  const bakedTexture = useMemo(() => {
    const texture = new TextureLoader().load("/textures/Room3-1.jpg");
    texture.flipY = false;
    return texture;
  }, []);

  return (
    <group {...props} dispose={null}>
      {/* ðŸ›‹ Sofa */}
      <group
        position={[-2.533, 0.325, -1.91]}
        rotation={[0, 0.805, 0]}
        scale={1.711}
      >
        {["Backmulti", "Cushions", "Legs"].map(
          (name) =>
            nodes[name] && (
              <mesh key={name} geometry={nodes[name].geometry}>
                <meshBasicMaterial map={bakedTexture} />
              </mesh>
            )
        )}
      </group>

      {/* ðŸ’¡ Floor Lamp */}
      <group
        position={[-4.566, 0.392, -0.189]}
        rotation={[0, 0.829, 0]}
        scale={1.918}
      >
        {[
          "FloorLamp_Bulb",
          "FloorLamp_Cover",
          "FloorLamp_Stem",
          "FloorLamp_Wire",
          "FloroLamp_WirePlug",
        ].map(
          (name) =>
            nodes[name] && (
              <mesh key={name} geometry={nodes[name].geometry}>
                <meshBasicMaterial map={bakedTexture} />
              </mesh>
            )
        )}
      </group>

      {/* ðŸ§± Walls & floor */}
      {["wall", "House_Plant_Dracaena_Lemon_Lime", "Floor"].map(
        (name) =>
          nodes[name] && (
            <mesh
              key={name}
              geometry={nodes[name].geometry}
              position={[0.695, 0.043, -0.039]}
            >
              <meshBasicMaterial map={bakedTexture} />
            </mesh>
          )
      )}

      {/* ðŸ”Œ Wall socket */}
      {nodes["EU_wall_socket001"] && (
        <mesh
          geometry={nodes["EU_wall_socket001"].geometry}
          position={[-4.835, 0.735, -0.543]}
        >
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
      )}

      {/* ðŸªŸ Window */}
      {nodes["win_singleRectangleClosed"] && (
        <mesh
          geometry={nodes["win_singleRectangleClosed"].geometry}
          position={[1.255, 2.784, -4.204]}
          rotation={[0, -0.781, 0]}
          scale={1.084}
        >
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
      )}
    </group>
  );
};

useGLTF.preload("/models/Room-3-1.glb");

export default Room_3;
