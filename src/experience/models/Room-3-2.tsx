/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Converted & cleaned for baked texture workflow
*/

import React, { useMemo } from "react";
import { useGLTF } from "@react-three/drei";
import { TextureLoader, Mesh } from "three";

type GLTFResult = {
  nodes: Record<string, Mesh>;
};

const Room3_2_Baked: React.FC<React.ComponentProps<"group">> = (props) => {
  const { nodes } = useGLTF("/models/Room-3-2.glb") as unknown as GLTFResult;

  const bakedTexture = useMemo(() => {
    const texture = new TextureLoader().load("/textures/Room3-2.jpg");
    texture.flipY = false;
    return texture;
  }, []);

  return (
    <group {...props} dispose={null}>
      {Object.entries(nodes).map(([name, node]) => (
        <mesh
          key={name}
          geometry={node.geometry}
          position={node.position ?? [0, 0, 0]}
          rotation={node.rotation ?? [0, 0, 0]}
        >
          <meshBasicMaterial map={bakedTexture} />
        </mesh>
      ))}
    </group>
  );
};

useGLTF.preload("/models/Room-3-2.glb");

export default Room3_2_Baked;
